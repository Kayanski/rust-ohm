[workspace]
members = ["contracts/*", "packages/*", "tests"]

# Enable the version 2 feature resolver, which avoids unifying features for targets that are not being built
#
# Critically this prevents dev-dependencies from enabling features even when not building a target that
# uses dev-dependencies, e.g. the library crate. This in turn ensures that we can catch invalid feature
# flag combinations that would otherwise only surface in dependent crates
#
# Reference - https://doc.rust-lang.org/nightly/cargo/reference/features.html#feature-resolver-version-2
# See - https://github.com/apache/arrow-rs/pull/1822/files
resolver = "2"

[workspace.package]
version = "0.0.1"
authors = []
edition = "2021"
license = "GPL-3.0-or-later"
keywords = ["cosmos", "cosmwasm", "olympus"]

[workspace.dependencies]
cosmwasm-std = { version = "1.2.7", features = ["cosmwasm_1_2"] }
cosmwasm-schema = { version = "1.2" }
cw-controllers = { version = "1.0" }
cw-utils = { version = "1.0" }
cw-storage-plus = "~1.1"
cw2 = { version = "1.0" }
cw20 = { version = "1.0" }
cw20-base = { git = "https://github.com/abstractsdk/cw-plus", features = [
  "library",
] }

cw-asset = { version = "3.0" }
cw-ownable = { version = "0.5" }
cw-address-like = { version = "1.0" }

prost = "0.11.0"
prost-types = "0.11.0"

cosmos-sdk-proto = "0.19.0"
schemars = "0.8"

cw-orch = { git = "https://github.com/abstractsdk/cw-orchestrator", branch = "update/injective-test-tube" }
# cw-orch = { path = "../../abstract/cw-orchestrator/cw-orch" }
staking = { path = "contracts/staking" }
bond = { path = "contracts/bond" }
oracle = { path = "contracts/oracle" }
injective-std = { path = "packages/injective-std" }

# Backup release profile, will result in warnings during optimization
[profile.release]
opt-level = 3
debug = false
rpath = false
lto = true
debug-assertions = false
codegen-units = 1
panic = 'abort'
incremental = false
overflow-checks = true
